buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'hoyle'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.9'

repositories {
	mavenCentral()
}

ext {
	set('springStatemachineVersion', '2.0.1.RELEASE')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok:1.18.4'
	annotationProcessor 'org.projectlombok:lombok:1.18.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

task webpack(type: Exec) {
	workingDir './app'
		commandLine 'cd'
	commandLine "npm", "run", "build"
    doLast {
        println 'Webpack executed'
    }
}

task copyWebPack(type: Copy) {
	dependsOn 'webpack'
	from('./app/build')
	into('src/main/resources/public')
    doLast {
        println "Webpack copied to classes folder"
    }
}

task cleanPublic(type: Delete) {
	delete 'src/main/resources/public'
}

task cleanWebPack(type: Delete) {
	delete 'app/build'
}

assemble.dependsOn copyWebPack
clean.dependsOn cleanPublic
clean.dependsOn cleanWebPack

task buildAll(type: GradleBuild) {
	tasks = ['clean', 'cleanPublic', 'cleanWebPack', 'webpack', 'copyWebPack', 'build', 'bootJar', 'dockerBuild']
}

task dockerBuild(type: Exec) {
	commandLine 'docker', 'build', '-t', 'hoyley/gshow', '.'
}

task dockerRun(type: Exec) {
	commandLine 'docker', 'run', '-p', '127.0.0.1:80:8080', '--rm', 'hoyley/gshow'
}

task buildAndRunDocker(type: GradleBuild) {
	tasks = ['buildAll', 'dockerRun']
}
