{"ast":null,"code":"import _classCallCheck from \"/Users/patrick.grady/code/gshow/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrick.grady/code/gshow/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrick.grady/code/gshow/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrick.grady/code/gshow/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrick.grady/code/gshow/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/patrick.grady/code/gshow/app/src/components/ChoiceGameOptions.js\";\nimport React, { Component } from 'react';\nimport facade from '../api/Facade';\nimport CircleContainer from './controls/CircleContainer';\nimport './ChoiceGameOptions.css';\nimport GameTimer from \"./GameTimer\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"handleChoice\",\n    value: function handleChoice(option) {\n      if (!this.playerMadeChoice()) {\n        this.setState({\n          chosen: option\n        });\n        facade.choiceGameAnswer(option.option);\n      }\n    }\n  }, {\n    key: \"playerLoggedIn\",\n    value: function playerLoggedIn() {\n      return !!this.props.myPlayer;\n    }\n  }, {\n    key: \"playerMadeChoice\",\n    value: function playerMadeChoice() {\n      var _this = this;\n\n      return this.props.playerAnswers && this.props.playerAnswers.some(function (ans) {\n        return _this.playerLoggedIn() && ans.id === _this.props.myPlayer.id;\n      });\n    }\n  }, {\n    key: \"playerSelectedOption\",\n    value: function playerSelectedOption(option) {\n      return this.playerMadeChoice() && this.state && this.state.chosen && this.state.chosen.option === option.option;\n    }\n  }, {\n    key: \"optionDisabled\",\n    value: function optionDisabled(option) {\n      return !this.playerLoggedIn() || this.playerMadeChoice() || option.eliminated;\n    }\n  }, {\n    key: \"getClassName\",\n    value: function getClassName(option) {\n      var className = \"option\";\n\n      if (this.playerSelectedOption(option)) {\n        className += \" optionMyChoice\";\n      } else if (option.eliminated) {\n        className += \" optionEliminated\";\n      }\n\n      return className;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(GameTimer, Object.assign({}, this.props.gameStatus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }))), React.createElement(CircleContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.props.options.map(function (option) {\n        return React.createElement(\"div\", {\n          className: _this2.getClassName(option),\n          onClick: function onClick() {\n            return _this2.handleChoice(option);\n          },\n          disabled: _this2.optionDisabled(option),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, option.option);\n      })));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/patrick.grady/code/gshow/app/src/components/ChoiceGameOptions.js"],"names":["React","Component","facade","CircleContainer","GameTimer","option","playerMadeChoice","setState","chosen","choiceGameAnswer","props","myPlayer","playerAnswers","some","ans","playerLoggedIn","id","state","eliminated","className","playerSelectedOption","gameStatus","options","map","getClassName","handleChoice","optionDisabled"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAO,yBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;;;;;;;;;;;;iCAIeC,M,EAAQ;AACnB,UAAI,CAAC,KAAKC,gBAAL,EAAL,EAA8B;AAC5B,aAAKC,QAAL,CAAc;AAACC,UAAAA,MAAM,EAAEH;AAAT,SAAd;AACAH,QAAAA,MAAM,CAACO,gBAAP,CAAwBJ,MAAM,CAACA,MAA/B;AACD;AACF;;;qCAEgB;AACf,aAAO,CAAC,CAAC,KAAKK,KAAL,CAAWC,QAApB;AACD;;;uCAEkB;AAAA;;AACjB,aAAO,KAAKD,KAAL,CAAWE,aAAX,IACL,KAAKF,KAAL,CAAWE,aAAX,CAAyBC,IAAzB,CAA8B,UAAAC,GAAG;AAAA,eAAI,KAAI,CAACC,cAAL,MAAyBD,GAAG,CAACE,EAAJ,KAAW,KAAI,CAACN,KAAL,CAAWC,QAAX,CAAoBK,EAA5D;AAAA,OAAjC,CADF;AAED;;;yCAEoBX,M,EAAQ;AAC3B,aAAO,KAAKC,gBAAL,MAA2B,KAAKW,KAAhC,IAAyC,KAAKA,KAAL,CAAWT,MAApD,IAA8D,KAAKS,KAAL,CAAWT,MAAX,CAAkBH,MAAlB,KAA6BA,MAAM,CAACA,MAAzG;AACD;;;mCAEcA,M,EAAQ;AACrB,aAAO,CAAC,KAAKU,cAAL,EAAD,IAA0B,KAAKT,gBAAL,EAA1B,IAAqDD,MAAM,CAACa,UAAnE;AACD;;;iCAEYb,M,EAAQ;AACnB,UAAIc,SAAS,GAAG,QAAhB;;AAEA,UAAI,KAAKC,oBAAL,CAA0Bf,MAA1B,CAAJ,EAAuC;AACrCc,QAAAA,SAAS,IAAI,iBAAb;AACD,OAFD,MAEO,IAAId,MAAM,CAACa,UAAX,EAAuB;AAC5BC,QAAAA,SAAS,IAAI,mBAAb;AACD;;AAED,aAAOA,SAAP;AACD;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,oBAAe,KAAKT,KAAL,CAAWW,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF,EAIE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKX,KAAL,CAAWY,OAAX,CAAmBC,GAAnB,CAAuB,UAAAlB,MAAM;AAAA,eAC7B;AAAK,UAAA,SAAS,EAAE,MAAI,CAACmB,YAAL,CAAkBnB,MAAlB,CAAhB;AACK,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACoB,YAAL,CAAkBpB,MAAlB,CAAN;AAAA,WADd;AAEK,UAAA,QAAQ,EAAE,MAAI,CAACqB,cAAL,CAAoBrB,MAApB,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAE6CA,MAAM,CAACA,MAFpD,CAD6B;AAAA,OAA7B,CAFJ,CAJF,CADF;AAgBD;;;;EAvD0BJ,S","sourcesContent":["import React, { Component } from 'react';\nimport facade from '../api/Facade';\nimport CircleContainer from './controls/CircleContainer';\nimport './ChoiceGameOptions.css';\nimport GameTimer from \"./GameTimer\";\n\nexport default class extends Component {\n\n  handleChoice(option) {\n    if (!this.playerMadeChoice()) {\n      this.setState({chosen: option});\n      facade.choiceGameAnswer(option.option);\n    }\n  }\n\n  playerLoggedIn() {\n    return !!this.props.myPlayer;\n  }\n\n  playerMadeChoice() {\n    return this.props.playerAnswers &&\n      this.props.playerAnswers.some(ans => this.playerLoggedIn() && ans.id === this.props.myPlayer.id);\n  }\n\n  playerSelectedOption(option) {\n    return this.playerMadeChoice() && this.state && this.state.chosen && this.state.chosen.option === option.option;\n  }\n\n  optionDisabled(option) {\n    return !this.playerLoggedIn() || this.playerMadeChoice() || option.eliminated;\n  }\n\n  getClassName(option) {\n    let className = \"option\";\n\n    if (this.playerSelectedOption(option)) {\n      className += \" optionMyChoice\";\n    } else if (option.eliminated) {\n      className += \" optionEliminated\";\n    }\n    \n    return className;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"timer\">\n          <GameTimer {...this.props.gameStatus} />\n        </div>\n        <CircleContainer>\n          {\n            this.props.options.map(option =>\n            <div className={this.getClassName(option)}\n                 onClick={() => this.handleChoice(option)}\n                 disabled={this.optionDisabled(option)}>{option.option}\n             </div>)\n          }\n        </CircleContainer>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}