{"ast":null,"code":"import _classCallCheck from \"/Users/patrick.grady/code/gshow/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrick.grady/code/gshow/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport facade from './api/Facade.js';\nimport Cookies from 'js-cookie';\n\nvar _default =\n/*#__PURE__*/\nfunction () {\n  function _default(onStateChange) {\n    _classCallCheck(this, _default);\n\n    this.onStateChange = onStateChange;\n    this.clear(true);\n  }\n\n  _createClass(_default, [{\n    key: \"clear\",\n    value: function clear(suppress) {\n      this.screen = \"Welcome\";\n      this.players = [];\n      this.playerId = null;\n      this.myPlayer = null;\n      this.gameConfig = null;\n      this.gameStatus = null;\n\n      if (!suppress) {\n        this.onChange();\n      }\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this = this;\n\n      setInterval(function () {\n        return _this.refresh();\n      }, 200);\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var _this2 = this;\n\n      facade.state().then(function (response) {\n        _this2.setState(response.data);\n      }).catch(function (err) {\n        console.error(err);\n\n        _this2.clear();\n      });\n    }\n  }, {\n    key: \"setState\",\n    value: function setState(state) {\n      if (!state || !state.screen || !state.screen.name) {\n        this.clear();\n        return;\n      }\n\n      this.screen = state.screen.name;\n      this.gameConfig = state.screen;\n      this.gameStatus = state.screen.status;\n\n      if (state.registeredPlayers) {\n        this.players = state.registeredPlayers;\n      } else {\n        this.players = [];\n      }\n\n      this.onChange();\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange() {\n      var _this3 = this;\n\n      this.playerId = Cookies.get(\"player-id\");\n      this.myPlayer = this.players.find(function (p) {\n        return p.id === _this3.playerId;\n      });\n      this.onStateChange();\n    }\n  }]);\n\n  return _default;\n}();\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/patrick.grady/code/gshow/app/src/AppState.js"],"names":["facade","Cookies","onStateChange","clear","suppress","screen","players","playerId","myPlayer","gameConfig","gameStatus","onChange","setInterval","refresh","state","then","response","setState","data","catch","err","console","error","name","status","registeredPlayers","get","find","p","id"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;;AAGE,oBAAYC,aAAZ,EAA2B;AAAA;;AACzB,SAAKA,aAAL,GAAqBA,aAArB;AACA,SAAKC,KAAL,CAAW,IAAX;AACD;;;;0BAEKC,Q,EAAU;AACd,WAAKC,MAAL,GAAc,SAAd;AACA,WAAKC,OAAL,GAAe,EAAf;AACA,WAAKC,QAAL,GAAgB,IAAhB;AACA,WAAKC,QAAL,GAAgB,IAAhB;AACA,WAAKC,UAAL,GAAkB,IAAlB;AACA,WAAKC,UAAL,GAAkB,IAAlB;;AAEA,UAAI,CAACN,QAAL,EAAe;AACb,aAAKO,QAAL;AACD;AACF;;;4BAEO;AAAA;;AACNC,MAAAA,WAAW,CAAC;AAAA,eAAM,KAAI,CAACC,OAAL,EAAN;AAAA,OAAD,EAAuB,GAAvB,CAAX;AACD;;;8BAES;AAAA;;AACRb,MAAAA,MAAM,CAACc,KAAP,GAAeC,IAAf,CAAoB,UAAAC,QAAQ,EAAI;AAC9B,QAAA,MAAI,CAACC,QAAL,CAAcD,QAAQ,CAACE,IAAvB;AACD,OAFD,EAEGC,KAFH,CAES,UAAAC,GAAG,EAAI;AACdC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;;AACA,QAAA,MAAI,CAACjB,KAAL;AACD,OALD;AAMD;;;6BAEQW,K,EAAO;AACd,UAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACT,MAAjB,IAA2B,CAACS,KAAK,CAACT,MAAN,CAAakB,IAA7C,EAAmD;AACjD,aAAKpB,KAAL;AACA;AACD;;AAED,WAAKE,MAAL,GAAcS,KAAK,CAACT,MAAN,CAAakB,IAA3B;AACA,WAAKd,UAAL,GAAkBK,KAAK,CAACT,MAAxB;AACA,WAAKK,UAAL,GAAkBI,KAAK,CAACT,MAAN,CAAamB,MAA/B;;AAEA,UAAIV,KAAK,CAACW,iBAAV,EAA6B;AAC3B,aAAKnB,OAAL,GAAeQ,KAAK,CAACW,iBAArB;AACD,OAFD,MAEO;AACL,aAAKnB,OAAL,GAAe,EAAf;AACD;;AAED,WAAKK,QAAL;AACD;;;+BAEU;AAAA;;AACT,WAAKJ,QAAL,GAAgBN,OAAO,CAACyB,GAAR,CAAY,WAAZ,CAAhB;AACA,WAAKlB,QAAL,GAAgB,KAAKF,OAAL,CAAaqB,IAAb,CAAkB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,EAAF,KAAS,MAAI,CAACtB,QAAlB;AAAA,OAAnB,CAAhB;AACA,WAAKL,aAAL;AACD","sourcesContent":["import facade from './api/Facade.js';\nimport Cookies from 'js-cookie'\nexport default class {\n\n  constructor(onStateChange) {\n    this.onStateChange = onStateChange;\n    this.clear(true);\n  }\n\n  clear(suppress) {\n    this.screen = \"Welcome\";\n    this.players = [];\n    this.playerId = null;\n    this.myPlayer = null;\n    this.gameConfig = null;\n    this.gameStatus = null;\n\n    if (!suppress) {\n      this.onChange();\n    }\n  }\n\n  start() {\n    setInterval(() => this.refresh(), 200);\n  }\n  \n  refresh() {\n    facade.state().then(response => {\n      this.setState(response.data);\n    }).catch(err => {\n      console.error(err);\n      this.clear();\n    });\n  }\n\n  setState(state) {\n    if (!state || !state.screen || !state.screen.name) {\n      this.clear();\n      return;\n    }\n\n    this.screen = state.screen.name;\n    this.gameConfig = state.screen;\n    this.gameStatus = state.screen.status;  \n\n    if (state.registeredPlayers) {\n      this.players = state.registeredPlayers;\n    } else {\n      this.players = [];\n    }\n\n    this.onChange();\n  }\n\n  onChange() {\n    this.playerId = Cookies.get(\"player-id\");\n    this.myPlayer = this.players.find(p => p.id === this.playerId);\n    this.onStateChange();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}