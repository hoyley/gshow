{"version":3,"sources":["api/Facade.js","components/controls/FancyButton.js","components/Welcome.js","components/PlayerRegistration.js","components/PlayerList.js","components/controls/CircleContainer.js","components/controls/Countdown.js","components/GameTimer.js","components/ChoiceGameOptions.js","components/ChoiceGameAnswer.js","components/ChoiceGame.js","components/Error.js","components/Screen.js","AppState.js","App.js","serviceWorker.js","index.js"],"names":["Facade","axios","get","nickname","method","url","headers","content-type","data","choice","FancyButton","buttonStyle","width","this","props","height","fancyFrontStyle","transform","fancyBackStyle","textTransform","viewBox","react_default","a","createElement","className","style","ref","onClick","id","fill","fontFamily","fontSize","textAnchor","letterSpacing","buttonText","color","stroke","strokeWidth","borderWidth","React","Component","defaultProps","facade","_this","FancyButton_FancyButton","startGame","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","name","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","value","preventDefault","onSubmit","type","onChange","playerList","players","map","player","key","score","myPlayer","concat","PlayerRegistration_default","i","rotate","children","length","rotateReverse","child","index","getRotateStyle","Countdown","react_countdown_clock_default","seconds","remaining","alpha","size","remainingTime","time","option","playerMadeChoice","chosen","playerAnswers","some","ans","playerLoggedIn","eliminated","playerSelectedOption","_this2","GameTimer_default","gameStatus","controls_CircleContainer_default","options","getClassName","handleChoice","disabled","optionDisabled","components_ChoiceGameAnswer","answer","correct","myAnswer","incorrect","answeredIncorrectly","noneAnswer","noAnswer","done","actualAnswer","elapsedTime","timeElapsed","points","getMyAnswer","gameConfig","status","gameOver","find","p","components_ChoiceGame","question","components_ChoiceGameOptions_default","Error","error","components_Screen","components_PlayerList_default","screen","components_Welcome_default","msg","getMainScreen","onStateChange","clear","suppress","playerId","setInterval","refresh","then","response","catch","err","console","registeredPlayers","_this3","Cookies","App","appState","AppState","onAppStateChange","start","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f71dd773.chunk.js","sourcesContent":["\nimport axios from 'axios';\n\nexport default {\n\n  state() {\n    return axios.get('/state');\n  },\n\n  registerPlayer(nickname) {\n    axios({\n      method: 'post',\n      url: '/registerPlayer',\n      headers: { 'content-type': 'text/plain' },\n      data: nickname\n    });\n  },\n\n  startGame() {\n    axios.get('/startGame');\n  },\n\n  choiceGameAnswer(choice) {\n    axios({\n      method: 'post',\n      url: '/game/choice',\n      headers: { 'content-type': 'text/plain' },\n      data: choice\n    });\n  }\n}\n","import React from 'react';\nimport './FancyButton.css';\n\nexport default class FancyButton extends React.Component {\n  render() {\n    // Mask id and styling\n    // need unique id's for multiple buttons\n    const maskId = 'mask_1';\n    const maskStyle = '#fancy-masked-element_' + maskId + ' { mask: url(#' + maskId + '); -webkit-mask: url(#' + maskId + ')}';\n\n    const buttonStyle = {\n      width: this.props.width,\n      height: this.props.height\n    };\n\n    const fancyFrontStyle = {\n      transform: 'rotateX(0deg) translateZ(' + this.props.height / 2 + 'px )'\n    };\n\n    const fancyBackStyle = {\n      transform: 'rotateX(90deg) translateZ( ' + this.props.height / 2 + 'px )'\n    };\n\n    // SVG attributes\n    const textTransform = 'matrix(1 0 0 1 ' + this.props.width / 2 + ' ' + this.props.height / 1.6 + ')';\n    const viewBox = '0 0 ' + this.props.width + ' ' + this.props.height;\n\n    return (\n      <div className=\"fancy-button\"\n           style={buttonStyle}\n           ref=\"fancyButton\"\n           onClick={this.props.onClick}>\n        <div className=\"fancy-flipper\">\n          <div className=\"fancy-front\" style={fancyFrontStyle}>\n            <svg\n              height={this.props.height}\n              width={this.props.width}\n              viewBox={viewBox}>\n              <defs>\n                <mask id={maskId}>\n                  <rect width=\"100%\" height=\"100%\" fill=\"#FFFFFF\"/>\n                  <text className=\"mask-text button-text\" fill=\"#000000\" transform={textTransform} fontFamily=\"'intro_regular'\" fontSize={this.props.fontSize} width=\"100%\" textAnchor=\"middle\" letterSpacing=\"1\">{this.props.buttonText}</text>\n                </mask>\n              </defs>\n              <style>\n                {maskStyle}\n              </style>\n              <rect id={'fancy-masked-element_' + maskId} fill={this.props.color} width=\"100%\" height=\"100%\"/>\n            </svg>\n          </div>\n          <div className=\"fancy-back\" style={fancyBackStyle}>\n            <svg\n              height={this.props.height}\n              width={this.props.width}\n              viewBox={viewBox}>\n              <rect stroke={this.props.color}\n                    strokeWidth={this.props.borderWidth}\n                    fill=\"transparent\"\n                    width=\"100%\"\n                    height=\"100%\"/>\n              <text className=\"button-text\" transform={textTransform} fill={this.props.color} fontFamily=\"'intro_regular'\" fontSize={this.props.fontSize} textAnchor=\"middle\" letterSpacing=\"1\">{this.props.buttonText}</text>\n            </svg>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFancyButton.defaultProps = {\n  color: '#FFFFFF',\n  width: 410,\n  height: 100,\n  fontSize: 40,\n  borderWidth: 15,\n  buttonText: 'FANCY BUTTON',\n};\n\n","import React, { Component } from \"react\";\nimport facade from \"../api/Facade\";\nimport './Welcome.css';\nimport FancyButton from './controls/FancyButton.js';\n\nexport default class extends Component {\n\n  startGame() {\n    facade.startGame();\n  }\n\n  render() {\n    return <div className=\"welcome\">\n      <div>\n        <FancyButton buttonText=\"Start Game!\" onClick={() => this.startGame()} />\n      </div>\n    </div>;\n  }\n}\n","import React, { Component } from 'react';\nimport facade from '../api/Facade'\nexport default class extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {name: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({name: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    facade.registerPlayer(this.state.name);\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.name} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PlayerRegistration from \"./PlayerRegistration\";\nimport './PlayerList.css'\n\nexport default class extends Component {\n\n\n  render() {\n    const players = this.props.players || [];\n\n    const playerList = players.map(player =>\n      <li key={player.id}>{player.nickname} ({player.score})</li>\n    );\n\n    return (\n      <div className=\"playerList\">\n        <h1>Registration</h1>\n        <ul>{playerList}</ul>\n\n        {this.props.myPlayer\n          ? <div>{`Welcome ${this.props.myPlayer.nickname}`}</div>\n          : <PlayerRegistration/>\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './CircleContainer.css'\n\nexport default class extends React.Component {\n\n  getRotateStyle(i) {\n\n    let type = .6, //circle type - 1 whole, 0.5 half, 0.25 quarter\n      radius = '12em', //distance from center\n      start = -90, //shift start from 0\n      numberOfElements = this.props.children.length,\n      slice = 360 * type / numberOfElements;\n\n    var rotate = slice * i + start;\n    var rotateReverse = rotate * -1;\n\n    return {\n      transform: `translate(${radius}, ${radius}) rotate(${rotate}deg) translate(${radius}) rotate(${rotateReverse}deg)`\n    };\n  };\n\n  render() {\n    return (\n      <ul className=\"circleContainer\">\n        {\n          this.props.children.map((child, index) =>\n            <li key={index} className=\"circleItem\" style={this.getRotateStyle(index)}>\n              {child}\n            </li>\n          )\n        }\n      </ul>\n    )};\n}\n","import React from 'react'\nimport ReactCountdownClock from \"react-countdown-clock\";\n\n\nexport default (props) => {\n  return <ReactCountdownClock seconds={props.remaining}\n                              color=\"green\"\n                              alpha={1}\n                              size={props.size} />\n}\n","import React from \"react\";\nimport Countdown from './controls/Countdown.js';\n\nexport default class extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      remainingTime: 10\n    }\n  }\n  componentDidMount() {\n    this.setState({ time: this.props.remainingTime })\n  }\n  \n  render() {\n    const time = this.state && this.state.time\n    return <div>\n      <Countdown remaining={time} size=\"100\"/>\n    </div>\n  }\n}\n","import React, { Component } from 'react';\nimport facade from '../api/Facade';\nimport CircleContainer from './controls/CircleContainer';\nimport './ChoiceGameOptions.css';\nimport GameTimer from \"./GameTimer\";\n\nexport default class extends Component {\n\n  handleChoice(option) {\n    if (!this.playerMadeChoice()) {\n      this.setState({chosen: option});\n      facade.choiceGameAnswer(option.option);\n    }\n  }\n\n  playerLoggedIn() {\n    return !!this.props.myPlayer;\n  }\n\n  playerMadeChoice() {\n    return this.props.playerAnswers &&\n      this.props.playerAnswers.some(ans => this.playerLoggedIn() && ans.id === this.props.myPlayer.id);\n  }\n\n  playerSelectedOption(option) {\n    return this.playerMadeChoice() && this.state && this.state.chosen && this.state.chosen.option === option.option;\n  }\n\n  optionDisabled(option) {\n    return !this.playerLoggedIn() || this.playerMadeChoice() || option.eliminated;\n  }\n\n  getClassName(option) {\n    let className = \"option\";\n\n    if (this.playerSelectedOption(option)) {\n      className += \" optionMyChoice\";\n    } else if (option.eliminated) {\n      className += \" optionEliminated\";\n    }\n    \n    return className;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"timer\">\n          <GameTimer {...this.props.gameStatus} />\n        </div>\n        <CircleContainer>\n          {\n            this.props.options.map(option =>\n            <div className={this.getClassName(option)}\n                 onClick={() => this.handleChoice(option)}\n                 disabled={this.optionDisabled(option)}>{option.option}\n             </div>)\n          }\n        </CircleContainer>\n      </div>\n    );\n  }\n\n}\n","import React from \"react\";\nimport './ChoiceGameAnswer.css';\n\nconst answeredCorrectly = (answer) => {\n  return answer && answer.correct;\n};\n\nconst answeredIncorrectly = (answer) => {\n  return answer && !answer.correct;\n};\n\nconst noAnswer = (answer) => {\n  return !answer;\n}\n\n\nexport default (props) => {\n  const correct = answeredCorrectly(props.myAnswer);\n  const incorrect = answeredIncorrectly(props.myAnswer);\n  const noneAnswer = noAnswer(props.myAnswer);\n  const done = !!props.actualAnswer;\n  const elapsedTime = props.myAnswer && props.myAnswer.timeElapsed;\n  const points = props.myAnswer && props.myAnswer.points;\n\n  return <div>\n    {\n      done &&\n        <div className=\"answer\">{props.actualAnswer}</div>\n    }\n\n    {\n      correct &&\n        <div className=\"answerMessage\">{\"You answered correctly in \" + elapsedTime + \" seconds and gained \" + points + \" points!\"}</div>\n    }\n\n    {\n      incorrect &&\n        <div className=\"answerMessage\">You got it wrong :(</div>\n    }\n\n    {\n      done && noneAnswer &&\n        <div className=\"answerMessage\">You didn't even answer!?!</div>\n    }\n  </div>\n\n}\n","import React from \"react\";\nimport ChoiceGameOptions from './ChoiceGameOptions';\nimport ChoiceGameAnswer from './ChoiceGameAnswer';\nimport './ChoiceGame.css'\n\nconst getMyAnswer = (props) => {\n  return props.gameConfig.status.gameOver && props.myPlayer && props.gameConfig.playerAnswers.find(p => p.id === props.myPlayer.id);\n};\n\nexport default (props) => {\n\n  return <div>\n    <h2 className=\"questionText\">{props.gameConfig.question}</h2>\n\n    {\n      props.gameConfig.status.gameOver\n        ? <ChoiceGameAnswer myAnswer={getMyAnswer(props)} actualAnswer={props.gameConfig.answer} />\n        : <ChoiceGameOptions options={props.gameConfig.options} playerAnswers={props.gameConfig.playerAnswers}\n                             myPlayer={props.myPlayer} gameStatus={props.gameStatus} />\n\n    }\n  </div>\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  return <h1>{props.error}</h1>;\n}\n","import React from \"react\";\nimport WelcomeScreen from \"./Welcome\";\nimport PlayerList from \"./PlayerList\";\nimport ChoiceGame from \"./ChoiceGame\";\nimport Error from \"./Error\";\nimport './Screen.css';\n\nconst getMainScreen = (props) => {\n  if (props.screen === \"Welcome\") {\n    return <WelcomeScreen />;\n  } else if (props.screen === \"ChoiceGame\") {\n    return <ChoiceGame gameStatus={props.gameStatus} gameConfig={props.gameConfig} players={props.players}\n                       myPlayer={props.myPlayer} />;\n  } else {\n    return <Error msg={\"Unknown screen: \" + props.screen} />\n  }\n}\n\nexport default (props) => {\n  return <div className=\"screen\">\n    <div className=\"playerList\"><PlayerList players={props.players} myPlayer={props.myPlayer} /></div>\n    <div className=\"gameArea\">{ getMainScreen(props) }</div>\n  </div>\n}\n","import facade from './api/Facade.js';\nimport Cookies from 'js-cookie'\nexport default class {\n\n  constructor(onStateChange) {\n    this.onStateChange = onStateChange;\n    this.clear(true);\n  }\n\n  clear(suppress) {\n    this.screen = \"Welcome\";\n    this.players = [];\n    this.playerId = null;\n    this.myPlayer = null;\n    this.gameConfig = null;\n    this.gameStatus = null;\n\n    if (!suppress) {\n      this.onChange();\n    }\n  }\n\n  start() {\n    setInterval(() => this.refresh(), 200);\n  }\n  \n  refresh() {\n    facade.state().then(response => {\n      this.setState(response.data);\n    }).catch(err => {\n      console.error(err);\n      this.clear();\n    });\n  }\n\n  setState(state) {\n    if (!state || !state.screen || !state.screen.name) {\n      this.clear();\n      return;\n    }\n\n    this.screen = state.screen.name;\n    this.gameConfig = state.screen;\n    this.gameStatus = state.screen.status;  \n\n    if (state.registeredPlayers) {\n      this.players = state.registeredPlayers;\n    } else {\n      this.players = [];\n    }\n\n    this.onChange();\n  }\n\n  onChange() {\n    this.playerId = Cookies.get(\"player-id\");\n    this.myPlayer = this.players.find(p => p.id === this.playerId);\n    this.onStateChange();\n  }\n\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Screen from './components/Screen';\nimport AppState from './AppState.js';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.appState = new AppState(() => this.onAppStateChange());\n    this.state = { appState: this.appState };\n  }\n\n  componentDidMount() {\n    this.appState.start();\n  }\n  \n  onAppStateChange() {\n    this.setState({ appState: this.appState });\n  }\n\n  render() {\n    return (\n      <Screen {...this.state.appState} />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}